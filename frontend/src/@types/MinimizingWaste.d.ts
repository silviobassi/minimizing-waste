/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/v1/work-stations/{workStationId}": {
    /** Deleta uma estação de trabalho */
    get: operations["findOrFail"];
    /** Edita uma estação de trabalho */
    put: operations["update"];
    /** Deleta uma estação de trabalho */
    delete: operations["delete"];
  };
  "/v1/users/{userId}": {
    /** Busca um usuário pelo ID */
    get: operations["findOrFail_1"];
    /** Edita um usuário */
    put: operations["update_1"];
  };
  "/v1/users/{userId}/photo": {
    /** Busca a foto do usuário */
    get: operations["findByUserPhoto"];
    /** Atualiza a foto do usuário */
    put: operations["updatePhoto"];
    /** Exclui a foto do usuário */
    delete: operations["deletePhoto"];
  };
  "/v1/users/{userId}/password": {
    /** Altera a Senha do usuário */
    put: operations["changePassword"];
  };
  "/v1/users/{userId}/access-groups/{accessGroupId}": {
    /** Associa um determinado grupo ao usuário atual */
    put: operations["associate"];
    /** Disassocia um determinado grupo ao usuário atual */
    delete: operations["disassociate"];
  };
  "/v1/supplies/materials/{supplyMaterialId}": {
    /** Edita um Recurso do Tipo Material */
    put: operations["update_2"];
  };
  "/v1/supplies/equipments/{supplyEquipmentId}": {
    /** Edita um Recurso do Tipo Equipamento */
    put: operations["update_3"];
  };
  "/v1/supplies-movements/{supplyMovementId}": {
    /** Deleta um movimento de recurso */
    get: operations["findById_1"];
    /** Edita um movimento de recurso */
    put: operations["update_4"];
    /** Deleta um movimento de recurso */
    delete: operations["delete_2"];
  };
  "/v1/supplies-movements/give-back/{supplyMovementId}": {
    /** Devolve uma quantia de recurso */
    put: operations["giveBackSupply"];
  };
  "/v1/sectors/{sectorId}": {
    /** Busca um setor pelo ID */
    get: operations["findOrFail_2"];
    /** Edita um setor */
    put: operations["update_5"];
    /** Deleta um setor */
    delete: operations["delete_3"];
  };
  "/v1/assignments/{assignmentId}": {
    /** Busca uma taerfa pelo ID */
    get: operations["findOrFail_3"];
    /** Edita uma tarefa */
    put: operations["update_6"];
    /** Deleta uma tarefa */
    delete: operations["delete_4"];
  };
  "/v1/assignments/{assignmentId}/employee-responsible/{employeeResponsibleId}": {
    /** Associa um colaborador a determinada tarefa */
    put: operations["attachEmployee"];
    /** Disassocia um colaborador a determinada tarefa */
    delete: operations["detachEmployee"];
  };
  "/v1/assignments/{assignmentId}/conclusion": {
    /** Conclui ou não uma tarefa */
    put: operations["completeAssignment"];
  };
  "/v1/assignments/{assignmentId}/approval": {
    /** Aprova ou reprova uma tarefa */
    put: operations["approveAssignment"];
  };
  "/v1/access-groups/{accessGroupId}": {
    /** Edita um grupo de acesso */
    put: operations["update_7"];
    /** Deleta um grupo de acesso */
    delete: operations["delete_5"];
  };
  "/v1/access-groups/{accessGroupId}/permissions/{permissionId}": {
    /** Associa as permissões relacionadas ao grupo atual */
    put: operations["associate_1"];
    /** Disassocia as permissões relacionadas ao grupo atual */
    delete: operations["disassociate_1"];
  };
  "/v1/work-stations": {
    /** Lista as estações de trabalho */
    get: operations["search"];
    /** Cria uma nova estação de trabalho */
    post: operations["create"];
  };
  "/v1/users": {
    /** Lista os usuários */
    get: operations["search_1"];
    /** Cria um novo usuário */
    post: operations["create_1"];
  };
  "/v1/supplies/materials": {
    /** Cria um Recurso do Tipo Material */
    post: operations["create_2"];
  };
  "/v1/supplies/equipments": {
    /** Cria um Recurso do Tipo Equipamento */
    post: operations["create_3"];
  };
  "/v1/supplies-movements": {
    /** Lista os movimentos de recursos */
    get: operations["all_1"];
    /** Cria um novo movimento de recurso */
    post: operations["create_4"];
  };
  "/v1/sectors": {
    /** Lista os setores */
    get: operations["search_3"];
    /** Cria um novo setor */
    post: operations["create_5"];
  };
  "/v1/assignments": {
    /** Lista as Tarefas */
    get: operations["search_5"];
    /** Cria uma nova tarefa */
    post: operations["create_6"];
  };
  "/v1/access-groups": {
    /** Lista os grupos de acesso */
    get: operations["all_4"];
    /** Cria um grupo de acesso */
    post: operations["create_7"];
  };
  "/v1/users/{userId}/access-groups": {
    /** Lista os grupos de acesso  de cada usuário */
    get: operations["all"];
  };
  "/v1/supplies": {
    /** Lista recursos */
    get: operations["search_2"];
  };
  "/v1/supplies/{supplyId}": {
    /** Busca um recurso por ID */
    get: operations["findById"];
    /** Deleta um recurso */
    delete: operations["delete_1"];
  };
  "/v1/supplies-movement/notifications/available": {
    /** Lista as notificações enviadas, por recursos atribuídos */
    get: operations["findNotificationBySuppliesAvailable"];
  };
  "/v1/permissions": {
    /** Lista as permissões de cada grupo de acesso */
    get: operations["all_2"];
  };
  "/v1/notifications/assignments/available": {
    /** Lista as notificações enviadas, por tarefas atribuídas */
    get: operations["search_4"];
  };
  "/v1/assignments/{assignmentId}/employee-responsible": {
    /** Lista colaboradores atribuídos a respectivas tarefas */
    get: operations["all_3"];
  };
  "/v1/access-groups/{accessGroupId}/permissions": {
    /** Lista as permissões relacionadas ao grupo atual */
    get: operations["all_5"];
  };
  "/v1/supplies-movements/vacancies/{supplyMovementId}": {
    /** Disponibiliza um movimento de recurso em estado ocioso */
    delete: operations["vacateSupply"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    ProblemObject: {
      /** @example title */
      name?: string;
      /** @example O campo título é obrigatório */
      userMessage?: string;
    };
    Problem: {
      /**
       * Format: int32 
       * @example 400
       */
      status?: number;
      /** @example https://enfatiza7.com/invalidated-data */
      type?: string;
      /** @example Dados inválidos */
      title?: string;
      /** @example Um ou mais campos estão inválidos. Faça o preenchimento correto e tente novamente. */
      detail?: string;
      /** @example Um ou mais campos estão inválidos. Faça o preenchimento correto e tente novamente. */
      userMessage?: string;
      /**
       * Format: date-time 
       * @example 2022-07-15T11:21:50.902245498Z
       */
      timestamp?: string;
      /** @description Lista de objetos ou campos que geraram o erro */
      objects?: (components["schemas"]["ProblemObject"])[];
    };
    SectorIdInput: {
      /**
       * Format: int64 
       * @example 1
       */
      id: number;
    };
    WorkStationInput: {
      /** @example Bloco B Apto 27 */
      name: string;
      /** @example Próximo ao Jardim da Fachada */
      localization: string;
      sector: components["schemas"]["SectorIdInput"];
    };
    Links: {
      [key: string]: components["schemas"]["Link"] | undefined;
    };
    WorkStationModel: {
      /**
       * Format: int64 
       * @example 1
       */
      id?: number;
      /** @example Bloco B Apto 27 */
      name?: string;
      /** @example Próximo ao Jardim da Fachada */
      localization?: string;
      _links?: components["schemas"]["Links"];
    };
    UserInput: {
      /** @example Pedro Oliveira Bassi */
      name: string;
      /** @example 99999999999 */
      cpf: string;
      /** @example pedro@gmail.com */
      email: string;
      /** @example 17996079654 */
      whatsApp: string;
      /** @example Azulejista */
      office: string;
      /** @example Instalador de Revestimento */
      occupation: string;
      /** @example Curso Superior Incompleto */
      literate: string;
    };
    AccessGroupSummaryModel: {
      /**
       * Format: int64 
       * @example 1
       */
      id?: number;
      /** @example Engenheiro */
      name?: string;
      _links?: components["schemas"]["Links"];
    };
    UserDetailedModel: {
      /**
       * Format: int64 
       * @example 1
       */
      id?: number;
      /** @example Pedro Oliveira Bassi */
      name?: string;
      /** @example 99999999999 */
      cpf?: string;
      /** @example pedro@gmail.com */
      email?: string;
      /** @example 17996079654 */
      whatsApp?: string;
      /** @example Azulejista */
      office?: string;
      /** @example Instalador de Revestimento */
      occupation?: string;
      /** @example Curso Superior Incompleto */
      literate?: string;
      /**
       * Format: date-time 
       * @example 2023-01-03T22:08:00Z
       */
      createdAt?: string;
      accessGroups?: (components["schemas"]["AccessGroupSummaryModel"])[];
      _links?: components["schemas"]["Links"];
    };
    UserPhotoInput: {
      /** Format: binary */
      file: string;
      /** @description descrição da foto do usuário */
      description: string;
    };
    UserPhotoModel: {
      /**
       * Format: int64 
       * @example 1
       */
      id?: number;
      /** @example 055a87c9-46fc-47c4-b093-dfe5d31f7a6e_avatar_test.jpg */
      fileName?: string;
      /** @example Silvio Bassi */
      description?: string;
      /** @example image/jpeg */
      contentType?: string;
      /**
       * Format: int64 
       * @example 74697
       */
      size?: number;
      _links?: components["schemas"]["Links"];
    };
    PasswordInput: {
      /** @example 12k43jd8#* */
      currentPassword: string;
      /** @example 1938kdk# */
      newPassword: string;
    };
    SupplyDescriptionInput: {
      /** @example Caixa de Papel */
      packing: string;
      /**
       * Format: int64 
       * @example 1
       */
      quantity: number;
      /** @example 50 */
      measure?: number;
      /**
       * @example KG 
       * @enum {string}
       */
      measureUnitType: "UNIDADE" | "ML" | "LITRO" | "M2" | "M3" | "KG" | "TONELADA";
    };
    SupplyMaterialInput: {
      /** @example Recurso */
      name: string;
      supplyDescription: components["schemas"]["SupplyDescriptionInput"];
      /**
       * @example TRANSMUTÁVEL 
       * @enum {string}
       */
      manipulation: "TRANSMUTÁVEL" | "IMUTÁVEL";
    };
    MaterialSupplyModel: {
      /**
       * Format: int64 
       * @example 1
       */
      id?: number;
      /** @example Recurso */
      name?: string;
      supplyDescription?: components["schemas"]["SupplyDescriptionSummaryModel"];
      /**
       * @example TRANSMUTÁVEL 
       * @enum {string}
       */
      manipulation?: "TRANSMUTÁVEL" | "IMUTÁVEL";
      _links?: components["schemas"]["Links"];
    };
    SupplyDescriptionSummaryModel: {
      /**
       * Format: int64 
       * @example 2
       */
      quantity?: number;
      /** @example 50 */
      measure?: number;
      /** @example 100 */
      total?: number;
      /**
       * @example KG 
       * @enum {string}
       */
      measureUnitType?: "UNIDADE" | "ML" | "LITRO" | "M2" | "M3" | "KG" | "TONELADA";
    };
    SupplyEquipmentInput: {
      /** @example Recurso */
      name: string;
      supplyDescription: components["schemas"]["SupplyDescriptionInput"];
      /** @enum {string} */
      bulk: "PEQUENO" | "MÉDIO" | "GRANDE";
    };
    EquipmentSupplyModel: {
      /**
       * Format: int64 
       * @example 1
       */
      id?: number;
      /** @example Recurso */
      name?: string;
      supplyDescription?: components["schemas"]["SupplyDescriptionSummaryModel"];
      /**
       * @example MÉDIO 
       * @enum {string}
       */
      bulk?: "PEQUENO" | "MÉDIO" | "GRANDE";
      _links?: components["schemas"]["Links"];
    };
    NotificationInput: {
      /** @example Início de Instalação de Revestimentos */
      title: string;
      /** @example Liberação de Banheiros */
      reason: string;
      /** @example Instalação de gessos nos tetos */
      goal: string;
    };
    SupplyIdInput: {
      /**
       * Format: int64 
       * @example 1
       */
      id: number;
    };
    SupplyMovementInput: {
      /** @example true */
      movable: boolean;
      /**
       * Format: int64 
       * @example 3
       */
      reservedQuantity: number;
      notification: components["schemas"]["NotificationInput"];
      workStation: components["schemas"]["WorkStationIdInput"];
      supply: components["schemas"]["SupplyIdInput"];
      employeeResponsible: components["schemas"]["UserIdInput"];
    };
    UserIdInput: {
      /**
       * Format: int64 
       * @example 2
       */
      id: number;
    };
    WorkStationIdInput: {
      /**
       * Format: int64 
       * @example 1
       */
      id: number;
    };
    NotificationModel: {
      /**
       * Format: date-time 
       * @example 2023-01-07T22:50:00Z
       */
      createdAt?: string;
      /** @example Início de Instalação de Revestimentos */
      title?: string;
      /** @example Liberação de Banheiros */
      reason?: string;
      /** @example Instalação de gessos nos tetos */
      goal?: string;
    };
    SupplyMovementModel: {
      /**
       * Format: int64 
       * @example 1
       */
      id?: number;
      /** @example true */
      notBusy?: boolean;
      /** @example false */
      movable?: boolean;
      /**
       * Format: int64 
       * @example 20
       */
      allocatedQuantity?: number;
      notification?: components["schemas"]["NotificationModel"];
      workStation?: components["schemas"]["WorkStationModel"];
      supply?: components["schemas"]["SupplySummaryModel"];
      _links?: components["schemas"]["Links"];
    };
    /** @example 1 */
    SupplySummaryModel: {
      /**
       * Format: int64 
       * @example 1
       */
      id?: number;
      /** @example Recurso */
      name?: string;
      supplyDescription?: components["schemas"]["SupplyDescriptionSummaryModel"];
      _links?: components["schemas"]["Links"];
    };
    DevolvedSupplyMovementInput: {
      /**
       * Format: int64 
       * @example 2
       */
      reservedQuantity: number;
    };
    SectorInput: {
      name: string;
    };
    SectorModel: {
      /**
       * Format: int64 
       * @example 1
       */
      id?: number;
      /** @example Acabamento */
      name?: string;
      _links?: components["schemas"]["Links"];
    };
    AssignmentInput: {
      /** @example Revestimento dos Banheiros */
      title: string;
      /**
       * Format: date-time 
       * @example 2022-12-28T13:00:33Z
       */
      startDate: string;
      /**
       * Format: date-time 
       * @example 2023-01-20T13:00:33Z
       */
      deadline: string;
      /** @example OBRAS */
      nature: string;
      workStation: components["schemas"]["WorkStationIdInput"];
    };
    AssignmentModel: {
      /**
       * Format: int64 
       * @example 1
       */
      id?: number;
      /** @example Revestimento dos Banheiros */
      title?: string;
      /**
       * Format: date-time 
       * @example 2022-12-28T13:00:33Z
       */
      startDate?: string;
      /**
       * Format: date-time 
       * @example 2023-01-20T13:00:33Z
       */
      deadline?: string;
      /**
       * Format: date-time 
       * @example 2023-01-20T13:00:33Z
       */
      endDate?: string;
      /** @example true */
      completed?: boolean;
      /** @example false */
      approved?: boolean;
      /**
       * @example OBRAS 
       * @enum {string}
       */
      nature?: "LIMPEZA" | "OBRAS";
      workStation?: components["schemas"]["WorkStationModel"];
      _links?: components["schemas"]["Links"];
    };
    AssignmentNotificationInput: {
      notification: components["schemas"]["NotificationInput"];
    };
    /** @description Representação da Conclusão da Tarefa */
    AssignmentCompletedInput: {
      /** @example true */
      completed: boolean;
    };
    /** @description Representação da Aprovação da Tarefa */
    AssignmentApprovedInput: {
      /** @example true */
      approved: boolean;
    };
    AccessGroupInput: {
      /** @example Engenheiro */
      name: string;
    };
    CollectionModelWorkStationModel: {
      _embedded?: {
        workStations?: (components["schemas"]["WorkStationModel"])[];
      };
      _links?: components["schemas"]["Links"];
    };
    CollectionModelUserDetailedModel: {
      _embedded?: {
        users?: (components["schemas"]["UserDetailedModel"])[];
      };
      _links?: components["schemas"]["Links"];
    };
    CollectionModelAccessGroupSummaryModel: {
      _embedded?: {
        "access-groups"?: (components["schemas"]["AccessGroupSummaryModel"])[];
      };
      _links?: components["schemas"]["Links"];
    };
    PageMetadata: {
      /** Format: int64 */
      size?: number;
      /** Format: int64 */
      totalElements?: number;
      /** Format: int64 */
      totalPages?: number;
      /** Format: int64 */
      number?: number;
    };
    PagedModelSupplySummaryModel: {
      _embedded?: {
        supplies?: (components["schemas"]["SupplySummaryModel"])[];
      };
      _links?: components["schemas"]["Links"];
      page?: components["schemas"]["PageMetadata"];
    };
    SupplyDescriptionDetailedModel: {
      /** @example Saco plástico */
      packing?: string;
      /**
       * Format: int64 
       * @example 3
       */
      quantity?: number;
      /** @example 40 */
      measure?: number;
      /** @example 120 */
      total?: number;
      /**
       * @example KG 
       * @enum {string}
       */
      measureUnitType?: "UNIDADE" | "ML" | "LITRO" | "M2" | "M3" | "KG" | "TONELADA";
    };
    SupplyDetailedModel: {
      /**
       * Format: int64 
       * @example 1
       */
      id?: number;
      /** @example Cimento */
      name?: string;
      /**
       * @example TRANSMUTÁVEL 
       * @enum {string}
       */
      manipulation?: "TRANSMUTÁVEL" | "IMUTÁVEL";
      /**
       * @example PEQUENO 
       * @enum {string}
       */
      bulk?: "PEQUENO" | "MÉDIO" | "GRANDE";
      supplyDescription?: components["schemas"]["SupplyDescriptionDetailedModel"];
    };
    PagedModelSupplyMovementModel: {
      _embedded?: {
        "supplies-movements"?: (components["schemas"]["SupplyMovementModel"])[];
      };
      _links?: components["schemas"]["Links"];
      page?: components["schemas"]["PageMetadata"];
    };
    SupplyMovementNotificationModel: {
      /**
       * Format: int64 
       * @example 1
       */
      id?: number;
      supply?: components["schemas"]["SupplySummaryModel"];
      supplyDescription?: components["schemas"]["SupplyDescriptionSummaryModel"];
      workStation?: components["schemas"]["WorkStationDetailedModel"];
      notification?: components["schemas"]["NotificationModel"];
    };
    WorkStationDetailedModel: {
      /**
       * Format: int64 
       * @example 1
       */
      id?: number;
      /** @example Bloco G Apto 21 */
      name?: string;
      /** @example Bloco G Apto 21 */
      localization?: string;
      sector?: components["schemas"]["SectorModel"];
    };
    SectorFilter: {
      sectorName?: string;
    };
    CollectionModelSectorModel: {
      _embedded?: {
        sectors?: (components["schemas"]["SectorModel"])[];
      };
      _links?: components["schemas"]["Links"];
    };
    CollectionModelPermissionDetailedModel: {
      _embedded?: {
        permissions?: (components["schemas"]["PermissionDetailedModel"])[];
      };
      _links?: components["schemas"]["Links"];
    };
    PermissionDetailedModel: {
      /**
       * Format: int64 
       * @example 1
       */
      id?: number;
      /** @example CONSULT_SUPPLIES */
      name?: string;
      /** @example Permite Consultar Recursos */
      description?: string;
      _links?: components["schemas"]["Links"];
    };
    AssignmentNotificationModel: {
      /** @example Início de Tarefa */
      title?: string;
      /** Format: date-time */
      startDate?: string;
      /** Format: date-time */
      endDate?: string;
      /** Format: date-time */
      deadline?: string;
      /** @example true */
      completed?: boolean;
      /** @example false */
      approved?: boolean;
      /** @example Tarefa reprovada, poir os rejuntamento está mal feito */
      approvalDescription?: string;
      /**
       * @example OBRAS 
       * @enum {string}
       */
      nature?: "LIMPEZA" | "OBRAS";
      workStation?: components["schemas"]["WorkStationDetailedModel"];
      notification?: components["schemas"]["NotificationModel"];
    };
    PagedModelAssignmentModel: {
      _embedded?: {
        assignments?: (components["schemas"]["AssignmentModel"])[];
      };
      _links?: components["schemas"]["Links"];
      page?: components["schemas"]["PageMetadata"];
    };
    Link: {
      href?: string;
      hreflang?: string;
      title?: string;
      type?: string;
      deprecation?: string;
      profile?: string;
      name?: string;
      templated?: boolean;
    };
  };
  responses: {
    /** @description Requisição inválida */
    BadRequestResponse: {
      content: {
        "application/json": components["schemas"]["Problem"];
      };
    };
    /** @description Recurso não possui representação que poderia ser aceita pelo consumidor */
    NotAcceptableResponse: {
      content: {
        "application/json": components["schemas"]["Problem"];
      };
    };
    /** @description Erro interno no servidor */
    InternalServerErrorResponse: {
      content: {
        "application/json": components["schemas"]["Problem"];
      };
    };
  };
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  findOrFail: {
    /** Deleta uma estação de trabalho */
    parameters: {
        /**
         * @description ID de um usuário 
         * @example 1
         */
      path: {
        workStationId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["WorkStationModel"];
        };
      };
      /** @description Estação de Trabalho não encontrada */
      404: {
        content: {
          "*/*": components["schemas"]["Problem"];
        };
      };
    };
  };
  update: {
    /** Edita uma estação de trabalho */
    parameters: {
        /**
         * @description ID de uma estação de trabalho 
         * @example 1
         */
      path: {
        workStationId: number;
      };
    };
    /** @description Representação de uma estação de trabalho editada */
    requestBody: {
      content: {
        "application/json": components["schemas"]["WorkStationInput"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["WorkStationModel"];
        };
      };
      /** @description Setor não encontrado */
      404: {
        content: {
          "*/*": components["schemas"]["Problem"];
        };
      };
    };
  };
  delete: {
    /** Deleta uma estação de trabalho */
    parameters: {
        /**
         * @description ID de uma estação de trabalho 
         * @example 1
         */
      path: {
        workStationId: number;
      };
    };
    responses: {
      /** @description No Content */
      204: never;
      /** @description Estação de Trabalho não encontrada */
      404: {
        content: {
          "*/*": components["schemas"]["Problem"];
        };
      };
    };
  };
  findOrFail_1: {
    /** Busca um usuário pelo ID */
    parameters: {
        /**
         * @description ID de um usuário 
         * @example 1
         */
      path: {
        userId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["UserDetailedModel"];
        };
      };
      /** @description Usuário não encontrado */
      404: {
        content: {
          "*/*": components["schemas"]["Problem"];
        };
      };
    };
  };
  update_1: {
    /** Edita um usuário */
    parameters: {
        /**
         * @description ID de um usuário 
         * @example 1
         */
      path: {
        userId: number;
      };
    };
    /** @description Representação de um usuário editado */
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserInput"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["UserDetailedModel"];
        };
      };
      /** @description Usuário não encontrado */
      404: {
        content: {
          "*/*": components["schemas"]["Problem"];
        };
      };
    };
  };
  findByUserPhoto: {
    /** Busca a foto do usuário */
    parameters: {
        /**
         * @description Id do usuário 
         * @example 1
         */
      path: {
        userId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["UserPhotoModel"];
          "image/jpeg": string;
          "image/png": string;
        };
      };
      /** @description ID do usuário inválido */
      400: {
        content: {
          "application/json": components["schemas"]["Problem"];
        };
      };
      /** @description Foto do usuário não encontrada */
      404: {
        content: {
          "application/json": components["schemas"]["Problem"];
        };
      };
    };
  };
  updatePhoto: {
    /** Atualiza a foto do usuário */
    parameters: {
        /**
         * @description Id do usuário 
         * @example 1
         */
      path: {
        userId: number;
      };
    };
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["UserPhotoInput"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["UserPhotoModel"];
        };
      };
    };
  };
  deletePhoto: {
    /** Exclui a foto do usuário */
    parameters: {
        /**
         * @description Id do usuário 
         * @example 1
         */
      path: {
        userId: number;
      };
    };
    responses: {
      /** @description Foto do usuário excluída */
      204: never;
      /** @description ID do usuário inválido */
      400: {
        content: {
          "*/*": components["schemas"]["Problem"];
        };
      };
      /** @description Foto do usuário não encontrada */
      404: {
        content: {
          "*/*": components["schemas"]["Problem"];
        };
      };
    };
  };
  changePassword: {
    /** Altera a Senha do usuário */
    parameters: {
        /**
         * @description ID de um usuário 
         * @example 1
         */
      path: {
        userId: number;
      };
    };
    /** @description Representação de uma nova senha */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PasswordInput"];
      };
    };
    responses: {
      /** @description No Content */
      204: never;
      /** @description Usuário não encontrado */
      404: {
        content: {
          "*/*": components["schemas"]["Problem"];
        };
      };
    };
  };
  associate: {
    /** Associa um determinado grupo ao usuário atual */
    parameters: {
      path: {
        userId: number;
        accessGroupId: number;
      };
    };
    responses: {
      /** @description Associação realizada com sucesso */
      204: never;
      /** @description ID do usuário/grupo de acesso inválido */
      400: {
        content: {
          "*/*": components["schemas"]["Problem"];
        };
      };
    };
  };
  disassociate: {
    /** Disassocia um determinado grupo ao usuário atual */
    parameters: {
      path: {
        userId: number;
        accessGroupId: number;
      };
    };
    responses: {
      /** @description Disassociação realizada com sucesso */
      204: never;
      /** @description ID do usuário/grupo de acesso inválido */
      400: {
        content: {
          "*/*": components["schemas"]["Problem"];
        };
      };
      /** @description Usuário não encontrado */
      404: {
        content: {
          "*/*": components["schemas"]["Problem"];
        };
      };
    };
  };
  update_2: {
    /** Edita um Recurso do Tipo Material */
    parameters: {
        /** @description ID de um recurso do tipo material */
      path: {
        supplyMaterialId: number;
      };
    };
    /** @description Representação de um Recurso do Tipo Material editado */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SupplyMaterialInput"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["MaterialSupplyModel"];
        };
      };
      /** @description ID do recurso inválido */
      400: {
        content: {
          "*/*": components["schemas"]["Problema"];
        };
      };
      /** @description Recurso não encontrado */
      404: {
        content: {
          "*/*": components["schemas"]["Problema"];
        };
      };
    };
  };
  update_3: {
    /** Edita um Recurso do Tipo Equipamento */
    parameters: {
        /** @description ID de um recurso do tipo equipamento */
      path: {
        supplyEquipmentId: number;
      };
    };
    /** @description Representação de um Recurso do Tipo Equipamento editado */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SupplyEquipmentInput"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["EquipmentSupplyModel"];
        };
      };
      /** @description ID do recurso inválido */
      400: {
        content: {
          "*/*": components["schemas"]["Problema"];
        };
      };
      /** @description Recurso não encontrado */
      404: {
        content: {
          "*/*": components["schemas"]["Problema"];
        };
      };
    };
  };
  findById_1: {
    /** Deleta um movimento de recurso */
    parameters: {
      path: {
        supplyMovementId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["SupplyMovementModel"];
        };
      };
      /** @description Movimento de Recurso não encontrado */
      404: {
        content: {
          "*/*": components["schemas"]["Problem"];
        };
      };
    };
  };
  update_4: {
    /** Edita um movimento de recurso */
    parameters: {
        /**
         * @description ID de um movimento de recurso 
         * @example 1
         */
      path: {
        supplyMovementId: number;
      };
    };
    /** @description Representação de um recurso a editar */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SupplyMovementInput"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["SupplyMovementModel"];
        };
      };
      /** @description Colaborador não encontrado */
      404: {
        content: {
          "*/*": components["schemas"]["Problem"];
        };
      };
    };
  };
  delete_2: {
    /** Deleta um movimento de recurso */
    parameters: {
      path: {
        supplyMovementId: number;
      };
    };
    responses: {
      /** @description Movimento de recurso deletado com sucesso */
      204: never;
      /** @description Movimento de Recurso não encontrado */
      404: {
        content: {
          "*/*": components["schemas"]["Problem"];
        };
      };
    };
  };
  giveBackSupply: {
    /** Devolve uma quantia de recurso */
    parameters: {
        /**
         * @description ID de um movimento de recurso 
         * @example 1
         */
      path: {
        supplyMovementId: number;
      };
    };
    /** @description Representação do recurso a devolver */
    requestBody: {
      content: {
        "application/json": components["schemas"]["DevolvedSupplyMovementInput"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["SupplyMovementModel"];
        };
      };
    };
  };
  findOrFail_2: {
    /** Busca um setor pelo ID */
    parameters: {
        /**
         * @description ID de um setor 
         * @example 1
         */
      path: {
        sectorId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["SectorModel"];
        };
      };
      /** @description ID do setor inválido */
      400: {
        content: {
          "*/*": components["schemas"]["Problema"];
        };
      };
      /** @description Setor não encontrado */
      404: {
        content: {
          "*/*": components["schemas"]["Problema"];
        };
      };
    };
  };
  update_5: {
    /** Edita um setor */
    parameters: {
        /**
         * @description ID de um setor 
         * @example 1
         */
      path: {
        sectorId: number;
      };
    };
    /** @description Representação de um setor editado */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SectorInput"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["SectorModel"];
        };
      };
      /** @description ID do setor inválido */
      400: {
        content: {
          "*/*": components["schemas"]["Problema"];
        };
      };
      /** @description Setor não encontrado */
      404: {
        content: {
          "*/*": components["schemas"]["Problema"];
        };
      };
    };
  };
  delete_3: {
    /** Deleta um setor */
    parameters: {
        /**
         * @description ID de um setor 
         * @example 1
         */
      path: {
        sectorId: number;
      };
    };
    responses: {
      /** @description Setor deletado com sucesso */
      204: never;
      /** @description ID do setor inválido */
      400: {
        content: {
          "*/*": components["schemas"]["Problema"];
        };
      };
      /** @description Setor não encontrado */
      404: {
        content: {
          "*/*": components["schemas"]["Problema"];
        };
      };
    };
  };
  findOrFail_3: {
    /** Busca uma taerfa pelo ID */
    parameters: {
        /** @description ID de iuma tarefa */
      path: {
        assignmentId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["AssignmentModel"];
        };
      };
      /** @description Tarefa não encontrada */
      404: {
        content: {
          "*/*": components["schemas"]["Problem"];
        };
      };
    };
  };
  update_6: {
    /** Edita uma tarefa */
    parameters: {
        /**
         * @description ID de uma tarefa 
         * @example 1
         */
      path: {
        assignmentId: number;
      };
    };
    /** @description Representação de uma tarefa editada */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AssignmentInput"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["AssignmentModel"];
        };
      };
      /** @description Tarefa não encontrada */
      404: {
        content: {
          "*/*": components["schemas"]["Problem"];
        };
      };
    };
  };
  delete_4: {
    /** Deleta uma tarefa */
    parameters: {
      path: {
        assignmentId: number;
      };
    };
    responses: {
      /** @description Tarefa deletada com sucesso */
      204: never;
      /** @description Tarefa não encontrada */
      404: {
        content: {
          "*/*": components["schemas"]["Problem"];
        };
      };
    };
  };
  attachEmployee: {
    /** Associa um colaborador a determinada tarefa */
    parameters: {
      path: {
        assignmentId: number;
        employeeResponsibleId: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AssignmentNotificationInput"];
      };
    };
    responses: {
      /** @description No Content */
      204: never;
    };
  };
  detachEmployee: {
    /** Disassocia um colaborador a determinada tarefa */
    parameters: {
      path: {
        assignmentId: number;
        employeeResponsibleId: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AssignmentNotificationInput"];
      };
    };
    responses: {
      /** @description No Content */
      204: never;
    };
  };
  completeAssignment: {
    /** Conclui ou não uma tarefa */
    parameters: {
        /** @description ID de uma tarefa */
      path: {
        assignmentId: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AssignmentCompletedInput"];
      };
    };
    responses: {
      /** @description Tarefa completada ou não com sucesso */
      204: never;
      /** @description Tarefa não encontrada */
      404: {
        content: {
          "*/*": components["schemas"]["Problem"];
        };
      };
    };
  };
  approveAssignment: {
    /** Aprova ou reprova uma tarefa */
    parameters: {
        /** @description ID de uma tarefa */
      path: {
        assignmentId: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AssignmentApprovedInput"];
      };
    };
    responses: {
      /** @description Tarefa aprovada ou reprovada com sucesso */
      204: never;
      /** @description Tarefa não encontrada */
      404: {
        content: {
          "*/*": components["schemas"]["Problem"];
        };
      };
    };
  };
  update_7: {
    /** Edita um grupo de acesso */
    parameters: {
        /**
         * @description ID de um grupo de acesso 
         * @example 1
         */
      path: {
        accessGroupId: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AccessGroupInput"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["AccessGroupSummaryModel"];
        };
      };
      /** @description ID do grupo de acesso inválido */
      400: {
        content: {
          "*/*": components["schemas"]["Problema"];
        };
      };
      /** @description Grupo de acesso não encontrado */
      404: {
        content: {
          "*/*": components["schemas"]["Problema"];
        };
      };
    };
  };
  delete_5: {
    /** Deleta um grupo de acesso */
    parameters: {
        /**
         * @description ID de um grupo de acesso 
         * @example 1
         */
      path: {
        accessGroupId: number;
      };
    };
    responses: {
      /** @description No Content */
      204: never;
      /** @description ID do grupo de acesso inválido */
      400: {
        content: {
          "*/*": components["schemas"]["Problema"];
        };
      };
      /** @description Grupo de acesso não encontrado */
      404: {
        content: {
          "*/*": components["schemas"]["Problema"];
        };
      };
    };
  };
  associate_1: {
    /** Associa as permissões relacionadas ao grupo atual */
    parameters: {
        /** @description ID do grupo de acesso */
        /** @description ID da permissão */
      path: {
        accessGroupId: number;
        permissionId: number;
      };
    };
    responses: {
      /** @description Associação realizada com sucesso */
      204: never;
      /** @description ID do grupo de acesso/permissão inválido */
      400: {
        content: {
          "*/*": components["schemas"]["Problema"];
        };
      };
      /** @description Grupo de acesso/permissão não encontrado */
      404: {
        content: {
          "*/*": components["schemas"]["Problema"];
        };
      };
    };
  };
  disassociate_1: {
    /** Disassocia as permissões relacionadas ao grupo atual */
    parameters: {
        /** @description ID do grupo de acesso */
        /** @description ID da permissão */
      path: {
        accessGroupId: number;
        permissionId: number;
      };
    };
    responses: {
      /** @description Disassociação realizada com sucesso */
      204: never;
      /** @description ID do grupo de acesso/permissão inválido */
      400: {
        content: {
          "*/*": components["schemas"]["Problema"];
        };
      };
      /** @description Grupo de acesso/permissão não encontrado */
      404: {
        content: {
          "*/*": components["schemas"]["Problema"];
        };
      };
    };
  };
  search: {
    /** Lista as estações de trabalho */
    parameters?: {
        /**
         * @description Nome da Estação de Trabalho 
         * @example Bloco B Apto 178
         */
      query?: {
        workStationName?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["CollectionModelWorkStationModel"];
        };
      };
    };
  };
  create: {
    /** Cria uma nova estação de trabalho */
    /** @description Representação de uma nova estação de trabalho */
    requestBody: {
      content: {
        "application/json": components["schemas"]["WorkStationInput"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "*/*": components["schemas"]["WorkStationModel"];
        };
      };
    };
  };
  search_1: {
    /** Lista os usuários */
    parameters?: {
        /**
         * @description Nome do usuário 
         * @example Pedro
         */
        /**
         * @description Cpf do usuário 
         * @example 99999999999
         */
      query?: {
        userName?: string;
        userCpf?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["CollectionModelUserDetailedModel"];
        };
      };
    };
  };
  create_1: {
    /** Cria um novo usuário */
    /** @description Representação de um novo usuário */
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserInput"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "*/*": components["schemas"]["UserDetailedModel"];
        };
      };
    };
  };
  create_2: {
    /** Cria um Recurso do Tipo Material */
    /** @description Representação de um novo Recurso do Tipo Material */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SupplyMaterialInput"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "*/*": components["schemas"]["MaterialSupplyModel"];
        };
      };
    };
  };
  create_3: {
    /** Cria um Recurso do Tipo Equipamento */
    /** @description Representação de um novo Recurso do Tipo Equipamento */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SupplyEquipmentInput"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "*/*": components["schemas"]["EquipmentSupplyModel"];
        };
      };
    };
  };
  all_1: {
    /** Lista os movimentos de recursos */
    parameters?: {
        /** @description Número da página (0..N). */
        /** @description Quantidade de elementos por página */
        /** @description Critério de ordenação: propriedade(asc|desc). */
      query?: {
        page?: number;
        size?: number;
        sort?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PagedModelSupplyMovementModel"];
        };
      };
    };
  };
  create_4: {
    /** Cria um novo movimento de recurso */
    /** @description Representação de uma novo movimento de recurso */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SupplyMovementInput"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "*/*": components["schemas"]["SupplyMovementModel"];
        };
      };
      /** @description Estação de Trabalho não encontrada */
      404: {
        content: {
          "*/*": components["schemas"]["Problem"];
        };
      };
    };
  };
  search_3: {
    /** Lista os setores */
    parameters: {
        /**
         * @description Nome do setor 
         * @example Acabamento
         */
      query: {
        sectorFilter: components["schemas"]["SectorFilter"];
        sectorName?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["CollectionModelSectorModel"];
        };
      };
    };
  };
  create_5: {
    /** Cria um novo setor */
    /** @description Representação de um novo setor */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SectorInput"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "*/*": components["schemas"]["SectorModel"];
        };
      };
    };
  };
  search_5: {
    /** Lista as Tarefas */
    parameters?: {
        /**
         * @description Título da Tarefa 
         * @example Revestir Banheiros
         */
        /**
         * @description Data de Início 
         * @example 2023-01-10T15:00:00Z
         */
        /**
         * @description Data de Finalização 
         * @example 2023-01-21T14:00:00Z
         */
        /**
         * @description Data final para conclusão 
         * @example 2023-01-22T11:07:00Z
         */
        /**
         * @description Status de Finalização 
         * @example true
         */
        /**
         * @description Status de Aprovação 
         * @example false
         */
        /** @description Número da página (0..N). */
        /** @description Quantidade de elementos por página */
        /** @description Critério de ordenação: propriedade(asc|desc). */
      query?: {
        assignmentTitle?: string;
        "O campo data inicial"?: Record<string, never>;
        endDate?: Record<string, never>;
        "O campo prazo para conclusão"?: Record<string, never>;
        "O campo conclusão"?: boolean;
        "O campo aprovação"?: boolean;
        page?: number;
        size?: number;
        sort?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PagedModelAssignmentModel"];
        };
      };
    };
  };
  create_6: {
    /** Cria uma nova tarefa */
    /** @description Representação de um nova tarefa */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AssignmentInput"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "*/*": components["schemas"]["AssignmentModel"];
        };
      };
    };
  };
  all_4: {
    /** Lista os grupos de acesso */
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["CollectionModelAccessGroupSummaryModel"];
        };
      };
    };
  };
  create_7: {
    /** Cria um grupo de acesso */
    /** @description Representação de um a novo grupo de acesso */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AccessGroupInput"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "*/*": components["schemas"]["AccessGroupSummaryModel"];
        };
      };
    };
  };
  all: {
    /** Lista os grupos de acesso  de cada usuário */
    parameters: {
      path: {
        userId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["CollectionModelAccessGroupSummaryModel"];
        };
      };
      /** @description ID do usuário */
      400: {
        content: {
          "*/*": components["schemas"]["Problem"];
        };
      };
    };
  };
  search_2: {
    /** Lista recursos */
    parameters?: {
        /**
         * @description Nome do recurso 
         * @example Cimento
         */
        /** @description Número da página (0..N). */
        /** @description Quantidade de elementos por página */
        /** @description Critério de ordenação: propriedade(asc|desc). */
      query?: {
        supplyName?: string;
        page?: number;
        size?: number;
        sort?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PagedModelSupplySummaryModel"];
        };
      };
    };
  };
  findById: {
    /** Busca um recurso por ID */
    parameters: {
        /** @description ID de um recurso */
      path: {
        supplyId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["SupplyDetailedModel"];
        };
      };
      /** @description Recurso não encontrado */
      404: {
        content: {
          "*/*": components["schemas"]["Problem"];
        };
      };
    };
  };
  delete_1: {
    /** Deleta um recurso */
    parameters: {
        /** @description ID de um recurso */
      path: {
        supplyId: number;
      };
    };
    responses: {
      /** @description Recurso deletado com sucesso */
      204: never;
      /** @description Recurso não encontrado */
      404: {
        content: {
          "*/*": components["schemas"]["Problem"];
        };
      };
    };
  };
  findNotificationBySuppliesAvailable: {
    /** Lista as notificações enviadas, por recursos atribuídos */
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": (components["schemas"]["SupplyMovementNotificationModel"])[];
        };
      };
    };
  };
  all_2: {
    /** Lista as permissões de cada grupo de acesso */
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["CollectionModelPermissionDetailedModel"];
        };
      };
    };
  };
  search_4: {
    /** Lista as notificações enviadas, por tarefas atribuídas */
    parameters?: {
        /** @description Estado da tarefa completa (true|false). */
        /** @description Estado da tarefa aprovada (true|false). */
        /**
         * @description Data atual. 
         * @example 2023-01-08T22:30:00Z
         */
      query?: {
        "O campo conclusão"?: boolean;
        "O campo aprovação"?: boolean;
        currentDate?: Record<string, never>;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": (components["schemas"]["AssignmentNotificationModel"])[];
        };
      };
    };
  };
  all_3: {
    /** Lista colaboradores atribuídos a respectivas tarefas */
    parameters: {
      path: {
        assignmentId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["CollectionModelUserDetailedModel"];
        };
      };
    };
  };
  all_5: {
    /** Lista as permissões relacionadas ao grupo atual */
    parameters: {
      path: {
        accessGroupId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["CollectionModelPermissionDetailedModel"];
        };
      };
      /** @description ID do grupo de acesso inválido */
      400: {
        content: {
          "*/*": components["schemas"]["Problema"];
        };
      };
      /** @description Grupo de acesso não encontrado */
      404: {
        content: {
          "*/*": components["schemas"]["Problema"];
        };
      };
    };
  };
  vacateSupply: {
    /** Disponibiliza um movimento de recurso em estado ocioso */
    parameters: {
        /**
         * @description ID de um movimento de recurso 
         * @example 1
         */
      path: {
        supplyMovementId: number;
      };
    };
    responses: {
      /** @description Recurso desocupado com sucesso */
      204: never;
      /** @description Movimento de Recurso não encontrado */
      404: {
        content: {
          "*/*": components["schemas"]["Problem"];
        };
      };
    };
  };
}
